name: CD

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for git tags

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Check Spotless
        run: ./gradlew spotlessCheck --init-script gradle/init.gradle.kts --no-configuration-cache --no-daemon --stacktrace

      - name: Run tests
        run: ./gradlew test --init-script gradle/init.gradle.kts --no-configuration-cache --no-daemon --stacktrace

      - name: Build library
        run: ./gradlew :sdk-signin-apple:build --init-script gradle/init.gradle.kts --no-configuration-cache --no-daemon --stacktrace

      - name: Build release artifacts
        run: |
          ./gradlew :sdk-signin-apple:assembleRelease --init-script gradle/init.gradle.kts --no-configuration-cache --no-daemon --stacktrace
          ./gradlew :sdk-signin-apple:bundleReleaseAar --init-script gradle/init.gradle.kts --no-configuration-cache --no-daemon --stacktrace

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## Changes in this Release
            - SignInWithApple Android SDK ${{ steps.get_version.outputs.VERSION }}
            
            ### Installation
            ```gradle
            repositories {
                maven { url 'https://jitpack.io' }
            }
            
            dependencies {
                implementation 'com.github.shinhyo:signin-with-apple:${{ steps.get_version.outputs.VERSION }}'
            }
            ```
            
            ### Library Files
            - `sdk-signin-apple-release.aar`: Main library file
            - `sdk-signin-apple-${{ steps.get_version.outputs.VERSION }}-sources.jar`: Source code (if available)
          files: |
            sdk-signin-apple/build/outputs/aar/sdk-signin-apple-release.aar
            sdk-signin-apple/build/libs/sdk-signin-apple-*-sources.jar
          draft: false
          prerelease: false

      - name: Trigger JitPack build
        run: |
          echo "Triggering JitPack build for version ${{ steps.get_version.outputs.VERSION }}"
          
          # JitPack build trigger (no API key needed for public repos)
          response=$(curl -s -w "%{http_code}" "https://jitpack.io/com/github/shinhyo/signin-with-apple/${{ steps.get_version.outputs.VERSION }}")
          http_code="${response: -3}"
          
          if [ "$http_code" -eq 200 ]; then
            echo "✅ JitPack build triggered successfully"
          else
            echo "⚠️ JitPack build trigger response code: $http_code"
            echo "This is normal - JitPack will build on first request"
          fi
          
          # Also trigger with 'latest' tag
          curl -s "https://jitpack.io/com/github/shinhyo/signin-with-apple/latest" > /dev/null
          echo "Also triggered build for 'latest' tag"
